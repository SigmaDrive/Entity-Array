//This will be the 'space' that the entities are within, which allows me to make addons for the program later

public class EntSlot
{
  Ent slotEnt;
  //adjacent index positions, starting from the top and going clockwise
  int adj1, adj2, adj3, adj4;
  
  //method to find adjacent squares using the index number, and using -1 as a void number
  public void adjFind(int index)
  {
    if (index % 10 == 0)
    {
      if (index == 0)
        adj1 = -1;
      else
        adj1 = index - 10;
      adj2 = index + 1;
      if (index == 90)
        adj3 = -1;
      else
        adj3 = index + 10;
      adj4 = -1;
    } else if (index % 10 == 9)
    {
      if (index == 9)
        adj1 = -1;
      else
        adj1 = index - 10;
      adj2 = -1;
      if (index == 99)
        adj3 = -1
      else
        adj3 = index + 10;
      adj4 = index - 1;
    } else
    {
      if (index < 10)
        adj1 = -1;
      else
        adj1 = index - 10;
      adj2 = index + 1;
      if (index > 89)
        adj3 = -1;
      else
        adj3 = index + 10;
      adj4 = index - 1;
    }
  }
  
  //invasion/attack method
  public boolean invade(Ent defender)
  {
    return slotEnt.attack > defender.defense;
  }

  //basic constructor
  public EntSlot(int localSeed)
  {
    slotEnt = new Ent(localSeed);
  }
}
